{"ast":null,"code":"var _jsxFileName = \"/home/arnav-panjla/Desktop/Codes/DEX/dex/src/components/Swap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Input, Popover, Radio, Modal, message } from \"antd\";\nimport { ArrowDownOutlined, DownOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport tokenList from \"../tokenList.json\";\nimport axios from \"axios\";\nimport { useSendTransaction, useWaitForTransaction } from \"wagmi\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Swap(props) {\n  _s();\n  const {\n    address,\n    isConnected\n  } = props;\n  const [messageApi, contextHolder] = message.useMessage();\n  const [slippage, setSlippage] = useState(2.5);\n  const [tokenOneAmount, setTokenOneAmount] = useState(null);\n  const [tokenTwoAmount, setTokenTwoAmount] = useState(null);\n  const [tokenOne, setTokenOne] = useState(tokenList[0]);\n  const [tokenTwo, setTokenTwo] = useState(tokenList[1]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [changeToken, setChangeToken] = useState(1);\n  const [prices, setPrices] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [txDetails, setTxDetails] = useState({\n    to: null,\n    data: null,\n    value: null\n  });\n  const {\n    data,\n    sendTransaction\n  } = useSendTransaction({\n    request: {\n      from: address,\n      to: String(txDetails.to),\n      data: String(txDetails.data),\n      value: String(txDetails.value)\n    }\n  });\n  const {\n    isLoading: txIsLoading,\n    isSuccess\n  } = useWaitForTransaction({\n    hash: data === null || data === void 0 ? void 0 : data.hash\n  });\n\n  // Improved amount change handler with validation\n  function changeAmount(e) {\n    const value = e.target.value;\n    // Only allow numbers and decimals\n    if (value && !/^\\d*\\.?\\d*$/.test(value)) return;\n    setTokenOneAmount(value);\n    if (value && prices) {\n      const calculatedAmount = (Number(value) * prices.ratio).toFixed(2);\n      setTokenTwoAmount(calculatedAmount === \"NaN\" ? null : calculatedAmount);\n    } else {\n      setTokenTwoAmount(null);\n    }\n  }\n\n  // Improved price fetching with error handling\n  async function fetchPrices(one, two) {\n    try {\n      setIsLoading(true);\n      const res = await axios.get(`http://localhost:3001/tokenPrice`, {\n        params: {\n          addressOne: one,\n          addressTwo: two\n        }\n      });\n      setPrices(res.data);\n    } catch (error) {\n      messageApi.open({\n        type: 'error',\n        content: 'Failed to fetch token prices',\n        duration: 3\n      });\n      console.error(\"Price fetch error:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  // Improved DEX swap function with proper error handling\n  async function fetchDexSwap() {\n    if (!isConnected) {\n      messageApi.open({\n        type: 'warning',\n        content: 'Please connect your wallet first',\n        duration: 3\n      });\n      return;\n    }\n    if (!tokenOneAmount || isNaN(tokenOneAmount)) {\n      messageApi.open({\n        type: 'warning',\n        content: 'Please enter a valid amount',\n        duration: 3\n      });\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const allowance = await axios.get(`https://api.1inch.io/v5.0/1/approve/allowance?tokenAddress=${tokenOne.address}&walletAddress=${address}`);\n      if (allowance.data.allowance === \"0\") {\n        const approve = await axios.get(`https://api.1inch.io/v5.0/1/approve/transaction?tokenAddress=${tokenOne.address}`);\n        setTxDetails(approve.data);\n        return;\n      }\n\n      // Format amount properly for the API\n      const rawAmount = Number(tokenOneAmount);\n      const multiplier = Math.pow(10, tokenOne.decimals);\n      const amount = Math.floor(rawAmount * multiplier).toString();\n      const tx = await axios.get(`https://api.1inch.io/v5.0/1/swap?fromTokenAddress=${tokenOne.address}&toTokenAddress=${tokenTwo.address}&amount=${amount}&fromAddress=${address}&slippage=${slippage}`);\n      const decimals = Math.pow(10, tokenTwo.decimals);\n      setTokenTwoAmount((Number(tx.data.toTokenAmount) / decimals).toFixed(2));\n      setTxDetails(tx.data.tx);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      messageApi.open({\n        type: 'error',\n        content: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.description) || 'Swap failed',\n        duration: 3\n      });\n      console.error(\"Swap error:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  // Improved useEffect with proper dependency array\n  useEffect(() => {\n    if (txDetails.to && isConnected && sendTransaction) {\n      sendTransaction();\n    }\n  }, [txDetails, isConnected, sendTransaction]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"swapButton\",\n      disabled: !tokenOneAmount || !isConnected || isLoading,\n      onClick: fetchDexSwap,\n      children: isLoading ? \"Loading...\" : \"Swap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Swap, \"J/0KC8Ep83m73wE8tyfFWZhJAms=\", false, function () {\n  return [message.useMessage, useSendTransaction, useWaitForTransaction];\n});\n_c = Swap;\nexport default Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["React","useState","useEffect","Input","Popover","Radio","Modal","message","ArrowDownOutlined","DownOutlined","SettingOutlined","tokenList","axios","useSendTransaction","useWaitForTransaction","Swap","props","address","isConnected","messageApi","contextHolder","useMessage","slippage","setSlippage","tokenOneAmount","setTokenOneAmount","tokenTwoAmount","setTokenTwoAmount","tokenOne","setTokenOne","tokenTwo","setTokenTwo","isOpen","setIsOpen","changeToken","setChangeToken","prices","setPrices","isLoading","setIsLoading","txDetails","setTxDetails","to","data","value","sendTransaction","request","from","String","txIsLoading","isSuccess","hash","changeAmount","e","target","test","calculatedAmount","Number","ratio","toFixed","fetchPrices","one","two","res","get","params","addressOne","addressTwo","error","open","type","content","duration","console","fetchDexSwap","isNaN","allowance","approve","rawAmount","multiplier","Math","pow","decimals","amount","floor","toString","tx","toTokenAmount","response","description"],"sources":["/home/arnav-panjla/Desktop/Codes/DEX/dex/src/components/Swap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Input, Popover, Radio, Modal, message } from \"antd\";\nimport {\n  ArrowDownOutlined,\n  DownOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport tokenList from \"../tokenList.json\";\nimport axios from \"axios\";\nimport { useSendTransaction, useWaitForTransaction } from \"wagmi\";\n\nfunction Swap(props) {\n  const { address, isConnected } = props;\n  const [messageApi, contextHolder] = message.useMessage();\n  const [slippage, setSlippage] = useState(2.5);\n  const [tokenOneAmount, setTokenOneAmount] = useState(null);\n  const [tokenTwoAmount, setTokenTwoAmount] = useState(null);\n  const [tokenOne, setTokenOne] = useState(tokenList[0]);\n  const [tokenTwo, setTokenTwo] = useState(tokenList[1]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [changeToken, setChangeToken] = useState(1);\n  const [prices, setPrices] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [txDetails, setTxDetails] = useState({\n    to: null,\n    data: null,\n    value: null,\n  });\n\n  const { data, sendTransaction } = useSendTransaction({\n    request: {\n      from: address,\n      to: String(txDetails.to),\n      data: String(txDetails.data),\n      value: String(txDetails.value),\n    }\n  });\n\n  const { isLoading: txIsLoading, isSuccess } = useWaitForTransaction({\n    hash: data?.hash,\n  });\n\n  // Improved amount change handler with validation\n  function changeAmount(e) {\n    const value = e.target.value;\n    // Only allow numbers and decimals\n    if (value && !/^\\d*\\.?\\d*$/.test(value)) return;\n    \n    setTokenOneAmount(value);\n    if (value && prices) {\n      const calculatedAmount = (Number(value) * prices.ratio).toFixed(2);\n      setTokenTwoAmount(calculatedAmount === \"NaN\" ? null : calculatedAmount);\n    } else {\n      setTokenTwoAmount(null);\n    }\n  }\n\n  // Improved price fetching with error handling\n  async function fetchPrices(one, two) {\n    try {\n      setIsLoading(true);\n      const res = await axios.get(`http://localhost:3001/tokenPrice`, {\n        params: { addressOne: one, addressTwo: two }\n      });\n      setPrices(res.data);\n    } catch (error) {\n      messageApi.open({\n        type: 'error',\n        content: 'Failed to fetch token prices',\n        duration: 3,\n      });\n      console.error(\"Price fetch error:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  // Improved DEX swap function with proper error handling\n  async function fetchDexSwap() {\n    if (!isConnected) {\n      messageApi.open({\n        type: 'warning',\n        content: 'Please connect your wallet first',\n        duration: 3,\n      });\n      return;\n    }\n\n    if (!tokenOneAmount || isNaN(tokenOneAmount)) {\n      messageApi.open({\n        type: 'warning',\n        content: 'Please enter a valid amount',\n        duration: 3,\n      });\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      const allowance = await axios.get(\n        `https://api.1inch.io/v5.0/1/approve/allowance?tokenAddress=${tokenOne.address}&walletAddress=${address}`\n      );\n\n      if (allowance.data.allowance === \"0\") {\n        const approve = await axios.get(\n          `https://api.1inch.io/v5.0/1/approve/transaction?tokenAddress=${tokenOne.address}`\n        );\n        setTxDetails(approve.data);\n        return;\n      }\n\n      // Format amount properly for the API\n      const rawAmount = Number(tokenOneAmount);\n      const multiplier = Math.pow(10, tokenOne.decimals);\n      const amount = Math.floor(rawAmount * multiplier).toString();\n\n      const tx = await axios.get(\n        `https://api.1inch.io/v5.0/1/swap?fromTokenAddress=${tokenOne.address}&toTokenAddress=${tokenTwo.address}&amount=${amount}&fromAddress=${address}&slippage=${slippage}`\n      );\n\n      const decimals = Math.pow(10, tokenTwo.decimals);\n      setTokenTwoAmount((Number(tx.data.toTokenAmount) / decimals).toFixed(2));\n      setTxDetails(tx.data.tx);\n\n    } catch (error) {\n      messageApi.open({\n        type: 'error',\n        content: error.response?.data?.description || 'Swap failed',\n        duration: 3,\n      });\n      console.error(\"Swap error:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  // Improved useEffect with proper dependency array\n  useEffect(() => {\n    if (txDetails.to && isConnected && sendTransaction) {\n      sendTransaction();\n    }\n  }, [txDetails, isConnected, sendTransaction]);\n\n  return (\n    <>\n      {/* Rest of your JSX remains the same */}\n      <div className=\"swapButton\" \n           disabled={!tokenOneAmount || !isConnected || isLoading} \n           onClick={fetchDexSwap}>\n        {isLoading ? \"Loading...\" : \"Swap\"}\n      </div>\n    </>\n  );\n}\n\nexport default Swap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}